var FeedbackTool = function (bID, $element) {
    this.bID = bID || 0;
    this.$element = $element || false;
    this.element = $element[0] || false;
};

FeedbackTool.prototype = function () {

    var characterCounter = function ($element, options) {

        if (!$element.length) {
            return false;
        }

        var options = options || {
            counter: $element.next('.counter'),
            countType: 'characters',
            maxCount: 140,
            strictMax: false,
            countDirection: 'down',
            safeClass: 'safe',
            overClass: 'over',
            thousandSeparator: ',',
            onOverCount: function (count, countable, counter) {},
            onSafeCount: function (count, countable, counter) {},
            onMaxCount: function (count, countable, counter) {}
        };
        $element.simplyCountable(options);
    };

    var reverseGeocoder = function (lat, lng) {
        var _this = this;

        if (typeof google === 'undefined' || typeof google.maps === 'undefined') {
            return false;
        }

        this.Geocoder = new google.maps.Geocoder;
        var latlng = new google.maps.LatLng(lat, lng);

        return new Promise(function (resolve, reject) {
            _this.Geocoder.geocode({
                'latLng': latlng
            }, function (results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        resolve(results);
                    } else {
                        resolve('No results found');
                    }
                } else {
                    resolve('Geocoder failed due to: ' + status);
                }
            });
        });

    };

    var locationAutocomplete = function (element, options) {

        if (typeof google === 'undefined' || typeof google.maps === 'undefined' || typeof google.maps.places === 'undefined') {
            return false;
        }

        var options = options || {};
        var autocomplete = new google.maps.places.Autocomplete(element, options);

        return new Promise(function (resolve, reject) {
            google.maps.event.addListener(autocomplete, 'place_changed', function () {
                var place = autocomplete.getPlace();
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();

                resolve([lat, lng, place]);
            });
        });
    };

    return {
        text: {
            characterCounter: characterCounter
        },
        map: {
            reverseGeocoder: reverseGeocoder,
            locationAutocomplete: locationAutocomplete
        }
    };

}();

$(function () {

    'use strict';
	
	$(document).on('click', '[data-toggle="loginModal"]', function() {
        var $modal = $('#loginModal');
        if (!$modal.length) {
            throw new Error('Sign in/Sign up modal is missing');
        }
        $modal.modal('show');
        return false;
    });
	
});